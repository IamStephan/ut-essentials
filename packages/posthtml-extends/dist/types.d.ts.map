{"mappings":";;AQcA,QAAA,MAAM,eAAe,YACT,QAAQ,YAAY,IAAI,YAAY,MAAM,GAAG,CAAC,kEAGvD,CAAA;AAGH,eAAe,eAAe,CAAA","sources":["packages/posthtml-extends/src/src/constants/useTags.ts","packages/posthtml-extends/src/src/utils/match.ts","packages/posthtml-extends/src/src/utils/getNodes.ts","packages/posthtml-extends/src/src/utils/getFillType.ts","packages/posthtml-extends/src/src/utils/mergeContent.ts","packages/posthtml-extends/src/src/tags/slotFill.ts","packages/posthtml-extends/src/src/utils/getNodePath.ts","packages/posthtml-extends/src/src/tags/use.ts","packages/posthtml-extends/src/src/index.ts","packages/posthtml-extends/src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,"import { Node } from 'posthtml'\nimport { merge } from 'lodash'\n\nimport { IOptions } from './types'\nimport { TemplateUseTags } from './constants/useTags'\nimport _handleSlotFill from './tags/slotFill'\nimport _handleUseTags from './tags/use'\n\nconst DefaultOptions: Partial<IOptions> = {\n  useTags: {\n    ...TemplateUseTags,\n  },\n}\n\nconst PostHTMLExtends =\n  (options: IOptions) => (tree: Node, messages: Array<any>) => {\n    const mergedOptions = merge(DefaultOptions, options)\n    return _handleUseTags(tree, mergedOptions, messages)\n  }\n\n// TODO: correct relative imports first before inserting into the main AST\nexport default PostHTMLExtends\n"],"names":[],"version":3,"file":"types.d.ts.map"}